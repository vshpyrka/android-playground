name: Publish

on:
  workflow_dispatch:

permissions:
  actions: write
  contents: write
  packages: read

env:
  GITHUB_USER: vshpyrka
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'true'
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-build-cache-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Extract existing versions
        id: extract_versions
        run: |
          # Get existing version code from build.gradle
          version_code=$(grep "versionCode" app/build.gradle.kts | awk -F'= ' '{print $2}')
          version_name=$(grep "versionName" app/build.gradle.kts | awk -F'= ' '{print $2}')
          echo "current_version_code=$version_code" >> $GITHUB_OUTPUT
          echo "current_version_name=$version_name" >> $GITHUB_OUTPUT

      - name: Increase version code and change version name
        run: |
            # Update build.gradle with new version code and name
            current_version_code="${{ steps.extract_versions.outputs.current_version_code }}"
            current_version_name="${{ steps.extract_versions.outputs.current_version_name }}"
            
            # Increment existing version code by 1
            final_version_code=$((current_version_code + 1))
            version_number=$(echo "$current_version_name" | sed 's/v//')
            IFS='.' read -ra version_parts <<< "$version_number"
            version_parts[-1]=$((version_parts[-1]+1))
            final_version_name="${version_parts[0]}.${version_parts[1]}"
            
            # Update build.gradle with new version code and name
            echo "$final_version_code - $final_version_name"
            
            # Use sed to replace the values.
            # The regex tries to match "versionCode = ANY_NUMBER" and "versionName = "ANY_STRING""
            # -i means edit in place
            sed -i "s/versionCode = .*/versionCode = $final_version_code/" app/build.gradle.kts
            sed -i "s/versionName = .*/versionName = \"$final_version_name\"/" app/build.gradle.kts
            # Note the escaped quotes for versionName if it's a string
          
            grep "versionCode =" app/build.gradle.kts 
            grep "versionName =" app/build.gradle.kts
#            sed -i "s/^\(\s*versionCode\s*=\s*\)[0-9]\+/\1$final_version_code/" app/build.gradle.kts
#            sed -i "s/^\(\s*versionName\s*=\s*\)[0-9]\+/\$final_version_name/" app/build.gradle.kts
#            git status

#      - name: Build Release
#        run: ./gradlew :app:bundleRelease --parallel
#
#      - name: Sign Android release
#        uses: r0adkll/sign-android-release@v1
#        with:
#          releaseDirectory: app/build/outputs/bundle/release
#          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#          alias: ${{ secrets.ALIAS }}
#          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#          keyPassword: ${{ secrets.KEY_PASSWORD }}
#
#      - name: Deploy to Internal Alpha
#        uses: r0adkll/upload-google-play@v1.1.3
#        with:
#          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_TEXT }}
#          packageName: com.vshpyrka.playground
#          releaseFiles: app/build/outputs/bundle/release/app-release.aab
#          track: internal alpha
#          changesNotSentForReview: true